var mysql = require("mysql");
var config = require('config');
var logger = require('logfactory').getLogger();
// Uncomment if mysql has not been properly promisified yet
var Promise = require("bluebird");
// Promise.promisifyAll(mysql);
Promise.promisifyAll(require("mysql/lib/Connection").prototype);
Promise.promisifyAll(require("mysql/lib/Pool").prototype);

var pool = mysql.createPool(config.mysql);
pool.on('acquire', function (connection) {
  logger.debug('从连接池获取连接 %d', connection.threadId);
});
pool.on('connection', function (connection) {
  logger.debug('连接池创建新连接 %d',connection.threadId);
});
pool.on('enqueue', function () {
  logger.debug('排队，等待可用连接...');
});
pool.on('release', function (connection) {
  logger.debug('释放连接 %d', connection.threadId);
});

function getConnection() {
    return pool.getConnectionAsync().disposer(function (connection, promise) {
        if(promise.isFulfilled()){
            logger.debug('提交事务');
            return connection.commitAsync().then(function(){
                connection.release();
            });
        } else {
            logger.debug('回滚事务');
            return connection.rollbackAsync().then(function(){
                connection.release();
            });
        }
    })
}

module.exports.getConnection = getConnection;