var fs = require('fs');

module.exports = function(path, app, authInterceptor, rootPath) {
  var router_root_path = rootPath ? rootPath : path;
  var file_separator = '/';
  var index_file = 'index.js';
  var stat = fs.lstatSync(path);
  if (stat.isFile()) {
    if (_.endsWith(path, index_file)) {
      return;
      // app.use(path.substr(router_root_path.length, path.length - router_root_path.length - index_file.length), require('../..' + path.substr(5)));
    } else {
      // app.all(path.substr(router_root_path.length, path.length - router_root_path.length - 3), authInterceptor);
      app.use(path.substr(router_root_path.length, path.length - router_root_path.length - 3), require('../..' + path.substr(5)));
    }
  } else if (stat.isDirectory()) {
    var files = fs.readdirSync(path);
    var self = arguments.callee;
    _.forEach(files, function(file) {
      self(path + file_separator + file, app, authInterceptor, router_root_path);
    });
  } else {
    var err = new Error(path + '不是文件或者目录！');
    throw err;
  }
};